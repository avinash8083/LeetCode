// https://leetcode.com/problems/distribute-coins-in-binary-tree/
// 1 means surplus , 0 means balanced ,-1 means scarcity 

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    int count;
    public int distributeCoins(TreeNode root) {
        count=0;
        distribute(root);
        return count;
    }
    int distribute(TreeNode node){
     if(node==null)
         return 0;
    int left = distribute(node.left);
	int right = distribute(node.right);
       int level=node.val+left+right-1;
        count+=Math.abs(level);
        return level;
    }
}
