//https://leetcode.com/problems/basic-calculator-ii/
//https://leetcode.com/problems/basic-calculator-ii/discuss/605923/Very-easy-and-small-stack-based-solution-in-java-with-explaination

class Solution {
    public int calculate(String s) {
        if (s == null || s.length() == 0) return 0;
        
        Stack<Integer> stack = new Stack<Integer>();
        
        char op = '+'; 
		s += op;
        int answer = 0, num = 0;
        
        for (char c: s.toCharArray()) {
            if (c >= '0' && c<='9') { num = num*10 + c-'0'; continue; }
            if (c == ' ') continue;
            switch (op) {
                case '+': stack.push(num); break;
                case '-': stack.push(-num); break;
                case '/': stack.push(stack.pop()/num); break;
                case '*': stack.push(stack.pop()*num); break;
            }
            op = c; num = 0;
        }
        
        while(!stack.isEmpty()) answer += stack.pop();
        return answer;
    }
}
