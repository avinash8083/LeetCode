//https://leetcode.com/problems/3sum-closest/

//...............................not good approch..........................................................................

class Solution {
    public int threeSumClosest(int[] nums, int target) {
        Arrays.sort(nums);
        int sum=100_000;
        for(int i=0;i<nums.length-2;i++){
            
           if(i>0 && nums[i]==nums[i-1])
               continue;
            
        int low=i+1,high=nums.length-1;
                        
        while(low<high){
                    int new1=nums[i]+nums[low]+nums[high]; 
                    System.out.println(nums[i]+"-"+nums[low]+"-"+nums[high]+"-"+sum+"-"+new1);
                   if(sum==target)return sum;
                   if(Math.abs(sum-target)>Math.abs(new1-target)){
                    sum=new1;
               // while (low < high && nums[low] == nums[low+1]) low++; //remove duplicate
                while (low < high && nums[high] == nums[high-1]) high--;  //remove duplicate 
                  }
                   if(new1<target)
                     low++;
                   else
                     high--;
                 }
        }
        return sum;
    }
}
//.............................................better aproch.......................................................
